services:
  frontend:
    container_name: pv_frontend
    build:
      context: .
      dockerfile: ./packages/client/Dockerfile
    environment:
      - NODE_ENV=development
      - VITE_API_PROTOCOL=http
      - VITE_API_HOST_NAME=localhost
      - VITE_API_PORT=3001
    ports:
      - "3000:3000"
    networks:
      - backend
    volumes:
      - ./:/app
      - ./packages/:/app/packages
      - ./packages/client/:/app/packages/client
      - ./packages/server/:/app/packages/server
      - /dev/null:/app/packages/client/.env.development
    command: bash -c "npm install && npm run dev"
  backend:
    container_name: pv_backend
    build:
      context: .
      dockerfile: ./packages/server/Dockerfile
    environment:
      - NODE_ENV=development
      - DB_HOST=pv_db
      - DB_NAME=pv_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - JWT_SECRET=secret
      - COOKIE_DOMAIN=localhost
      - COOKIE_SECRET=secret
      - COOKIE_MAX_AGE=604800000
      - CLIENT_HOST=localhost
      - CLIENT_PORT=3000
      - SERVER_PORT=3001
    ports:
      - "3001:3001"
    depends_on:
      - db
    networks:
      - backend
    volumes:
      - ./:/app
      - ./packages/:/app/packages
      - ./packages/client/:/app/packages/client
      - ./packages/server/:/app/packages/server
      - /dev/null:/app/packages/server/.env.development
      - /dev/null:/app/packages/server/.env.test
    command: bash -c "npm install && npm run dev"
  db:
    container_name: pv_db
    image: postgres:latest
    environment:
      POSTGRES_DB: pv_db_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - backend
    volumes:
      - ./packages/server/tmp/db:/var/lib/postgresql/data
networks:
  backend:
    driver: bridge
